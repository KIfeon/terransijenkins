---
- name: Copy SSH private key to all instances
  hosts: targets
  remote_user: "{{ ansible_user | default('ubuntu') }}"
  become: true
  gather_facts: true
  serial: 1
  pre_tasks:
    - name: Wait for SSH to be available
      wait_for_connection:
        timeout: 300

  vars:
    user_home: "/home/{{ ansible_user }}"

  tasks:
    - name: Ensure .ssh directory exists for login user
      file:
        path: "{{ user_home }}/.ssh"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0700'

    - name: Copy lab_rsa.pem to user's ~/.ssh/
      copy:
        src: lab_rsa.pem
        dest: "{{ user_home }}/.ssh/lab_rsa.pem"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'

- name: Set hostname to inventory name
  hosts: targets
  remote_user: "{{ ansible_user | default('ubuntu') }}"
  become: true
  gather_facts: true
  serial: 1
  tasks:
    - name: Set the system hostname
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Ensure hostname present in /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^127.0.1.1'
        line: "127.0.1.1 {{ inventory_hostname }}"
        state: present

- name: Install and start Apache on web servers
  hosts: webservers
  remote_user: "{{ ansible_user | default('ubuntu') }}"
  become: true
  gather_facts: true
  serial: 1
  pre_tasks:
    - name: Wait for SSH to be available
      wait_for_connection:
        timeout: 300

  tasks:
    - name: Update package metadata (Debian/Ubuntu)
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == 'Debian'

    - name: Install Apache (Debian/Ubuntu)
      apt:
        name: apache2
        state: present
      when: ansible_os_family == 'Debian'

    - name: Install Apache (Amazon Linux)
      package:
        name: httpd
        state: present
      when: ansible_os_family in ['RedHat', 'Amazon']

    - name: Ensure Apache is running and enabled (Debian/Ubuntu)
      service:
        name: apache2
        state: started
        enabled: yes
      when: ansible_os_family == 'Debian'

    - name: Ensure Apache is running and enabled (Amazon Linux)
      service:
        name: httpd
        state: started
        enabled: yes
      when: ansible_os_family in ['RedHat', 'Amazon']

    - name: Simple index page
      copy:
        dest: /var/www/html/index.html
        content: |
          <html>
          <head><title>Lab Web Server</title></head>
          <body>
          <h1>Apache is up on {{ inventory_hostname }}</h1>
          </body>
          </html>
        owner: root
        group: root
        mode: '0644'
- name: Install and initialize database on DB servers
  hosts: dbservers
  remote_user: "{{ ansible_user | default('ubuntu') }}"
  become: true
  gather_facts: true
  serial: 1
  pre_tasks:
    - name: Wait for SSH to be available
      wait_for_connection:
        timeout: 300

  tasks:
    - name: Update package metadata (Debian/Ubuntu)
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == 'Debian'

    - name: Install MariaDB server (Debian/Ubuntu)
      apt:
        name: mariadb-server
        state: present
      when: ansible_os_family == 'Debian'

    - name: Install MariaDB server (Amazon Linux/RedHat)
      package:
        name: mariadb-server
        state: present
      when: ansible_os_family in ['RedHat', 'Amazon']

    - name: Ensure MariaDB is running and enabled (Debian/Ubuntu)
      service:
        name: mariadb
        state: started
        enabled: yes
      when: ansible_os_family == 'Debian'

    - name: Ensure MariaDB is running and enabled (Amazon Linux/RedHat)
      service:
        name: mariadb
        state: started
        enabled: yes
      when: ansible_os_family in ['RedHat', 'Amazon']

    - name: Create database 'labdb' (Debian/Ubuntu)
      command: mysql -u root -e "CREATE DATABASE IF NOT EXISTS labdb;"
      when: ansible_os_family == 'Debian'

    - name: Create database 'labdb' (Amazon Linux/RedHat)
      command: mysql -u root -e "CREATE DATABASE IF NOT EXISTS labdb;"
      when: ansible_os_family in ['RedHat', 'Amazon']
